version: '3.8'

x-shared: &shared
  restart: ${RESTART_POLICY}
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_N8N_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_N8N_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_N8N_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
  links:
    - postgres
    - redis
  volumes:
    - ${N8N_DATA_PATH}:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG}
    restart: ${RESTART_POLICY}
    container_name: rkt-postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_N8N_DB
      - POSTGRES_N8N_USER
      - POSTGRES_N8N_PASSWORD
      - POSTGRES_MM_DB
      - POSTGRES_MM_USER
      - POSTGRES_MM_PASSWORD
      - TZ
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
      - ./n8n/docker/compose/withPostgresAndWorker/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    container_name: rkt-redis
    restart: ${RESTART_POLICY}
    volumes:
      - ${REDIS_DATA_PATH}:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    container_name: rkt-n8n
    ports:
      - 5678:5678
    networks:
      default:
        aliases:
          - n8n.rkt

  n8n-worker:
    container_name: rkt-n8n-worker
    <<: *shared
    command: worker
    depends_on:
      - n8n
